name: releng
on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  qa:
    runs-on: ubuntu-latest
    container: archlinux:latest

    strategy:
      matrix:
        include:
          - lua-version: 5.4
            pkg: lua
            bin: lua
            ver: LUA54
          - lua-version: 5.3
            pkg: lua53
            bin: lua5.3
            ver: LUA53

    name: lua ${{ matrix.lua-version }}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: prepare
        run: |
          yes | pacman -Syu --noconfirm
          pacman -Sy --noconfirm base-devel cmake openssl ${{ matrix.pkg }}

      - name: build
        run: |
          mkdir build; cd build
          cmake .. -D${{ matrix.ver }}=1 -DCMAKE_INSTALL_PREFIX=/usr
          make
          make install

      - name: test
        run: ${{ matrix.bin }} test.lua

  release:
    runs-on: ubuntu-latest
    container: archlinux:latest
    needs: qa

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: prepare
        run: |
          yes | pacman -Syu --noconfirm
          pacman -Sy --noconfirm base-devel git cmake openssl lua lua53
          useradd -d /__w/srp/srp -s /bin/bash build
          chown -R build /__w/srp/srp

      - name: gather version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: package
        run: |
          cd dist
          su build -c "makepkg PKGVERSION=${{ steps.get_version.outputs.VERSION }}"

      - name: release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: upload wowpasswd
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/wowpasswd-${{ steps.get_version.outputs.VERSION }}-1-x86_64.pkg.tar.zst
          asset_name: wowpasswd-${{ steps.get_version.outputs.VERSION }}-1-x86_64.pkg.tar.zst
          asset_content_type: application/zstd

      - name: upload lua53-srp
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/lua53-srp-${{ steps.get_version.outputs.VERSION }}-1-x86_64.pkg.tar.zst
          asset_name: lua53-srp-${{ steps.get_version.outputs.VERSION }}-1-x86_64.pkg.tar.zst
          asset_content_type: application/zstd

      - name: upload lua-srp
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/lua-srp-${{ steps.get_version.outputs.VERSION }}-1-x86_64.pkg.tar.zst
          asset_name: lua-srp-${{ steps.get_version.outputs.VERSION }}-1-x86_64.pkg.tar.zst
          asset_content_type: application/zstd
